title = Passo dopo passo
cards = checkout commit-auto

[description]

Benvenuto! nella lezione di oggi impareremo come creare commits con più precisione!

Dai un'occhiata a queste due linee temporali. Hanno lo stesso risultato, ma in una delle due è molto più semplice capire cosa è successo.

[win]

# Esatto! Avere ogni cambiamento nel proprio commit rende più facile capire cosa sta succedendo!
git branch --show-current | grep step-by-step

[setup]

echo "Una piccola ma pesante palla di vetro." > ball
echo "Un sottile libro che sta in piedi." > book
echo "Una candela brucia con una fiamma blu." > candle
echo "Un sensore di fumo. E' assolutamente silenzioso." > smoke_detector

git add .
git commit -m "L'inizio"

git branch -M all-at-once

echo "La palla adesso tocca il libro." > ball
echo "Il libro è caduto." > book
echo "La candella è stata spenta." > candle

git commit -am "La fine"

git checkout HEAD^

git checkout -b step-by-step

echo "La palla adesso tocca il libro." > ball
git commit -am "La palla rotola verso il libro"

echo "Il libro è caduto." > book
git commit -am "Il libro è caduto"

echo "La candela è stata spenta." > candle
git commit -am "Il libro ha spento la candela"

git checkout HEAD~3

[win]

# Prendi la sequenza temporale più chiara e fai suonare il sensore di fumo!
git show step-by-step:smoke_detector | tail -n 1 | grep -v "assolutamente silenzioso"
